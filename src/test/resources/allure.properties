# Allure Reporting Configuration for Amazon MacBook Pro Tests
# This file configures Allure Framework settings for comprehensive test reporting

# ============================================================================
# BASIC ALLURE CONFIGURATION
# ============================================================================

# Allure results directory (where raw test results are stored)
allure.results.directory=target/allure-results

# Allure report directory (where generated HTML reports are stored)  
allure.report.directory=target/allure-report

# Enable/disable Allure reporting
allure.enabled=true

# Allure report version (automatically handled by Maven plugin)
allure.version=2.24.0

# ============================================================================
# TEST EXECUTION CONFIGURATION
# ============================================================================

# Link patterns for test management integration
allure.link.issue.pattern=https://jira.company.com/browse/{}
allure.link.tms.pattern=https://testmanagement.company.com/test/{}

# Test environment information
allure.env.browser=${browser}
allure.env.environment=${environment}
allure.env.base.url=${base.url}
allure.env.test.suite=Amazon MacBook Pro Tests

# ============================================================================
# REPORT CUSTOMIZATION
# ============================================================================

# Project name displayed in Allure report
allure.title=Amazon MacBook Pro Test Automation Report

# Report description
allure.description=Comprehensive test automation report for Amazon MacBook Pro search and purchase functionality

# Logo configuration (optional - requires logo file in src/test/resources)
# allure.logo=logo.png

# Custom CSS for report styling (optional)
# allure.custom.css=custom-allure.css

# ============================================================================
# CATEGORIES CONFIGURATION
# ============================================================================

# Enable automatic test categorization based on failure reasons
allure.categories.enabled=true

# Categories configuration file (optional - for custom failure categorization)
# allure.categories.file=categories.json

# ============================================================================
# ATTACHMENTS CONFIGURATION  
# ============================================================================

# Maximum attachment size (in bytes) - 10MB
allure.attachment.max.size=10485760

# Screenshot attachment settings
allure.screenshot.enabled=true
allure.screenshot.on.failure=true
allure.screenshot.on.success=false

# Page source attachment settings
allure.page.source.enabled=true
allure.page.source.on.failure=true

# Browser logs attachment settings
allure.browser.logs.enabled=true
allure.browser.logs.on.failure=true

# Video recording settings (if supported)
allure.video.enabled=false
allure.video.on.failure=false

# ============================================================================
# HISTORY AND TRENDS
# ============================================================================

# Enable test execution history tracking
allure.history.enabled=true

# Maximum number of historical executions to keep
allure.history.max.executions=10

# Enable trend analysis
allure.trends.enabled=true

# ============================================================================
# INTEGRATION SETTINGS
# ============================================================================

# Jenkins integration (if using Jenkins CI/CD)
allure.jenkins.enabled=false
allure.jenkins.url=http://jenkins.company.com

# GitHub integration (for linking to repository)
allure.github.enabled=false
allure.github.repository=https://github.com/company/amazon-tests

# JIRA integration (for test case linking)
allure.jira.enabled=false
allure.jira.url=https://jira.company.com

# TestRail integration (for test management)
allure.testrail.enabled=false
allure.testrail.url=https://company.testrail.io

# ============================================================================
# PERFORMANCE METRICS
# ============================================================================

# Enable performance metrics collection
allure.metrics.enabled=true

# Enable timing information in reports
allure.timing.enabled=true

# Enable memory usage tracking
allure.memory.enabled=false

# ============================================================================
# SECURITY AND PRIVACY
# ============================================================================

# Mask sensitive data in reports (passwords, tokens, etc.)
allure.security.mask.enabled=true

# Patterns for data masking (regex patterns)
allure.security.mask.patterns=password,token,apikey,secret

# Enable data sanitization for screenshots
allure.security.sanitize.screenshots=true

# ============================================================================
# PARALLEL EXECUTION SUPPORT
# ============================================================================

# Enable thread-safe result writing
allure.thread.safe=true

# Maximum number of concurrent writers
allure.concurrent.writers=5

# ============================================================================
# LOCALIZATION AND INTERNATIONALIZATION
# ============================================================================

# Report language (en, de, fr, es, ru, etc.)
allure.language=en

# Date and time format
allure.date.format=yyyy-MM-dd HH:mm:ss

# Timezone for report timestamps
allure.timezone=UTC

# ============================================================================
# ADVANCED CONFIGURATION
# ============================================================================

# Enable debug mode for troubleshooting
allure.debug=false

# Log level for Allure framework (ERROR, WARN, INFO, DEBUG)
allure.log.level=INFO

# Enable step timing precision (microseconds)
allure.step.timing.precision=true

# Maximum number of test steps to display
allure.step.max.count=100

# Enable automatic retry detection
allure.retry.detection=true

# Custom properties file for environment information
allure.env.properties.file=environment.properties

# ============================================================================
# PLUGIN-SPECIFIC SETTINGS
# ============================================================================

# Cucumber plugin specific settings
allure.cucumber.enabled=true
allure.cucumber.step.naming=PARAMETER_AND_KEYWORD

# TestNG plugin specific settings  
allure.testng.enabled=true
allure.testng.detailed.parameters=true

# ============================================================================
# CLEANUP CONFIGURATION
# ============================================================================

# Automatically clean old results before new execution
allure.cleanup.enabled=true

# Number of days to keep old results
allure.cleanup.retention.days=7

# Clean screenshots older than specified days
allure.cleanup.screenshots.retention.days=3

# ============================================================================
# NOTIFICATION SETTINGS
# ============================================================================

# Enable email notifications for test results
allure.notifications.email.enabled=false
allure.notifications.email.smtp.host=smtp.company.com
allure.notifications.email.smtp.port=587
allure.notifications.email.recipients=team@company.com

# Enable Slack notifications
allure.notifications.slack.enabled=false
allure.notifications.slack.webhook=https://hooks.slack.com/services/...

# ============================================================================
# CUSTOM METADATA
# ============================================================================

# Custom metadata for test execution
allure.meta.project=Amazon MacBook Pro Tests
allure.meta.version=1.0.0
allure.meta.build=${build.number}
allure.meta.branch=${git.branch}
allure.meta.commit=${git.commit}

# Test execution metadata
allure.meta.executed.by=${user.name}
allure.meta.execution.date=${execution.date}
allure.meta.execution.environment=${test.environment}

# Browser and system metadata
allure.meta.browser.name=${browser.name}
allure.meta.browser.version=${browser.version}
allure.meta.os.name=${os.name}
allure.meta.java.version=${java.version}